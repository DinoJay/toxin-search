@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ont: <http://ontologies.vub.be/oecd#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

<#DossierTriplesMap>
    rr:logicalTable [ rr:sqlQuery "SELECT ROWNUM() AS ID, * FROM ACUTETOXICITY" ] ;

    rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/dossier/{DOSSIER}" ;
        rr:class ont:Report ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ont:contains ;
        rr:objectMap [ 
            rr:parentTriplesMap <#TestTriplesMap> ; 
            rr:joinCondition [ rr:child "ID" ; rr:parent "ID" ; ] ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ rr:column "DOSSIER" ; ] ;
    ] ;
    rr:predicateObjectMap [
            rr:predicate rdfs:seeAlso ;
            rr:objectMap [ rr:column "\"PDF link\"" ; rr:termType rr:IRI ; ] ;
        ] ;
.

<#TestTriplesMap>

    rr:logicalTable [ rr:sqlQuery "SELECT ROWNUM() AS ID, * FROM ACUTETOXICITY" ] ;
  

    rr:subjectMap [
        rr:template "http://toxin.vub.be/resource/test/acutetoxicity/{ID}" ;
        rr:class ont:Test ;
    ] ;

    # test_endpoints_keys = [
    #     'target_organ',
    #     'observations_and_recording',
    #     'dose_descriptor',
    #     'moribund_or_dead_animals_prior_to_study_termination',
    #     'mortality_rate',
    #     'conclusion'
    # ];

   rr:predicateObjectMap [
        rr:predicate ont:target_organ ;
        rr:objectMap [ rr:column "target organ at necroscopy" ; ] ;
    ] ; 
    
   rr:predicateObjectMap [
        rr:predicate ont:observations ;
        rr:objectMap [ rr:column "observations and recording" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:dose_descriptor ;
        rr:objectMap [ rr:column "dose descriptor" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:moribund_or_dead_animals_prior_to_study_termination ;
        rr:objectMap [ rr:column "moribund or dead animals prior to study termination" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:mortality_rate ;
        rr:objectMap [ rr:column "mortality rate" ; ] ;
    ] ; 
    rr:predicateObjectMap [
            rr:predicate ont:conclusion ;
            rr:objectMap [ rr:column "CONCLUSION" ; ] ;
    ] ; 
    # test_substance_keys = [
    #     'homogeneity_and_stability',
    #     'treatment_prior_to_application',
    #     'physical_form',
    #     'concentration',
    #     'composition',
    #     'purity',
    #     'solubility_in_vehicle',
    #     'chemical_batch_nr',
    #     'particle_size',
    #     'additional_info'
    # ];

   rr:predicateObjectMap [
        rr:predicate ont:homogeneity_and_stability ;
        rr:objectMap [ rr:column "homogeneity and stability" ; ] ;
    ] ; 
   rr:predicateObjectMap [
        rr:predicate ont:treatment_prior_to_application ;
        rr:objectMap [ rr:column "treatment prior to application" ; ] ;
    ] ; 
   rr:predicateObjectMap [
        rr:predicate ont:physical_form ;
        rr:objectMap [ rr:column "physical form" ; ] ;
    ] ; 
   rr:predicateObjectMap [
        rr:predicate ont:concentration ;
        rr:objectMap [ rr:column "CONCENTRATION" ; ] ;
    ] ; 
   rr:predicateObjectMap [
        rr:predicate ont:composition ;
        rr:objectMap [ rr:column "COMPOSITION" ; ] ;
    ] ; 
   rr:predicateObjectMap [
        rr:predicate ont:purity ;
        rr:objectMap [ rr:column "PURITY" ; ] ;
    ] ; 
    #todo check in other csvs
   rr:predicateObjectMap [
        rr:predicate ont:solubility_in_vehicle ;
        rr:objectMap [ rr:column "solubility in vehicle" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:chemical_batch_nr ;
        rr:objectMap [ rr:column "chemical batch nr" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:particle_size ;
        rr:objectMap [ rr:column "particle size" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:additional_info ;
        rr:objectMap [ rr:column "additional info" ; ] ;
    ] ; 

    # route_of_exposure_keys = [
    #     'oral',
    #     'dermal',
    #     'body_surface_area',
    #     'patching_technique',
    #     'skin_condition',
    #     'inhalation',
    #     'occular',
    #     'other'
    # ];
   rr:predicateObjectMap [
        rr:predicate ont:oral ;
        rr:objectMap [ rr:column "ORAL" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:dermal ;
        rr:objectMap [ rr:column "DERMAL" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:body_surface ;
        rr:objectMap [ rr:column "body surface area" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:patching_technique ;
        rr:objectMap [ rr:column "patching technique" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:skin_condition ;
        rr:objectMap [ rr:column "skin condition" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:inhalation ;
        rr:objectMap [ rr:column "INHALATION" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:other ;
        rr:objectMap [ rr:column "OTHER" ; ] ;
    ] ; 

#    rr:predicateObjectMap [
#         rr:predicate ont:occular ;
#         rr:objectMap [ rr:column "OCCULAR" ; ] ;
#     ] ; 

    # test_species_keys = [
    #     'species_strain',
    #     'source',
    #     'age_at_start_of_experiment',
    #     'age_measuring_unit',
    #     'sex',
    #     'weight',
    #     'weight_measuring_unit',
    #     'feed',
    #     'n_animals_dose',
    #     'test_system_details'
    # ];
    
   rr:predicateObjectMap [
        rr:predicate ont:species_strain ;
        rr:objectMap [ rr:column "species/strain" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:source ;
        rr:objectMap [ rr:column "SOURCE" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:age_at_start_of_experiment ;
        rr:objectMap [ rr:column "age at start of experiment" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:age_measuring_unit ;
        rr:objectMap [ rr:column "age measuring unit" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:sex ;
        rr:objectMap [ rr:column "SEX" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:weight ;
        rr:objectMap [ rr:column "WEIGHT" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:weight_measuring_unit ;
        rr:objectMap [ rr:column "weight measuring unit" ; ] ;
    ] ; 

    # reliability_of_test_keys = [
    #     'scss', todo: does not exist
    #     'year',
    #     'control_groups',
    #     'glp_preliminary_study',
    #     'klimisch_score',
    #     'ref_in_dossier'
    # ];

   rr:predicateObjectMap [
        rr:predicate ont:scss ;
        rr:objectMap [ rr:column "SCSS" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:year ;
        rr:objectMap [ rr:column "YEAR" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:control_groups ;
        rr:objectMap [ rr:column "control groups" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:glp ;
        rr:objectMap [ rr:column "GLP" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:klimisch_score ;
        rr:objectMap [ rr:column "klimisch score" ; ] ;
    ] ; 

   rr:predicateObjectMap [
        rr:predicate ont:ref_in_dossier ;
        rr:objectMap [ rr:column "ref in dossier" ; ] ;
    ] ; 
.